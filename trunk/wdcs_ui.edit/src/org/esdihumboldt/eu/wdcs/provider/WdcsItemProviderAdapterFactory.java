/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.esdihumboldt.eu.wdcs.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.esdihumboldt.eu.wdcs.util.WdcsAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class WdcsItemProviderAdapterFactory extends WdcsAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public WdcsItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.esdihumboldt.eu.wdcs.Cardinality} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CardinalityItemProvider cardinalityItemProvider;

	/**
	 * This creates an adapter for a {@link org.esdihumboldt.eu.wdcs.Cardinality}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCardinalityAdapter() {
		if (cardinalityItemProvider == null) {
			cardinalityItemProvider = new CardinalityItemProvider(this);
		}

		return cardinalityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.esdihumboldt.eu.wdcs.ComplexPostcondition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComplexPostconditionItemProvider complexPostconditionItemProvider;

	/**
	 * This creates an adapter for a {@link org.esdihumboldt.eu.wdcs.ComplexPostcondition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComplexPostconditionAdapter() {
		if (complexPostconditionItemProvider == null) {
			complexPostconditionItemProvider = new ComplexPostconditionItemProvider(this);
		}

		return complexPostconditionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.esdihumboldt.eu.wdcs.ComplexPrecondition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComplexPreconditionItemProvider complexPreconditionItemProvider;

	/**
	 * This creates an adapter for a {@link org.esdihumboldt.eu.wdcs.ComplexPrecondition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComplexPreconditionAdapter() {
		if (complexPreconditionItemProvider == null) {
			complexPreconditionItemProvider = new ComplexPreconditionItemProvider(this);
		}

		return complexPreconditionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.esdihumboldt.eu.wdcs.Constraint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstraintItemProvider constraintItemProvider;

	/**
	 * This creates an adapter for a {@link org.esdihumboldt.eu.wdcs.Constraint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstraintAdapter() {
		if (constraintItemProvider == null) {
			constraintItemProvider = new ConstraintItemProvider(this);
		}

		return constraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.esdihumboldt.eu.wdcs.DataflowConnection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataflowConnectionItemProvider dataflowConnectionItemProvider;

	/**
	 * This creates an adapter for a {@link org.esdihumboldt.eu.wdcs.DataflowConnection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataflowConnectionAdapter() {
		if (dataflowConnectionItemProvider == null) {
			dataflowConnectionItemProvider = new DataflowConnectionItemProvider(this);
		}

		return dataflowConnectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.esdihumboldt.eu.wdcs.DocumentRoot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DocumentRootItemProvider documentRootItemProvider;

	/**
	 * This creates an adapter for a {@link org.esdihumboldt.eu.wdcs.DocumentRoot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDocumentRootAdapter() {
		if (documentRootItemProvider == null) {
			documentRootItemProvider = new DocumentRootItemProvider(this);
		}

		return documentRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.esdihumboldt.eu.wdcs.Format} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FormatItemProvider formatItemProvider;

	/**
	 * This creates an adapter for a {@link org.esdihumboldt.eu.wdcs.Format}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFormatAdapter() {
		if (formatItemProvider == null) {
			formatItemProvider = new FormatItemProvider(this);
		}

		return formatItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.esdihumboldt.eu.wdcs.GroundingInformation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GroundingInformationItemProvider groundingInformationItemProvider;

	/**
	 * This creates an adapter for a {@link org.esdihumboldt.eu.wdcs.GroundingInformation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGroundingInformationAdapter() {
		if (groundingInformationItemProvider == null) {
			groundingInformationItemProvider = new GroundingInformationItemProvider(this);
		}

		return groundingInformationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.esdihumboldt.eu.wdcs.HarmonisationTransformationDescription} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HarmonisationTransformationDescriptionItemProvider harmonisationTransformationDescriptionItemProvider;

	/**
	 * This creates an adapter for a {@link org.esdihumboldt.eu.wdcs.HarmonisationTransformationDescription}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHarmonisationTransformationDescriptionAdapter() {
		if (harmonisationTransformationDescriptionItemProvider == null) {
			harmonisationTransformationDescriptionItemProvider = new HarmonisationTransformationDescriptionItemProvider(this);
		}

		return harmonisationTransformationDescriptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.esdihumboldt.eu.wdcs.LiteralPostcondition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiteralPostconditionItemProvider literalPostconditionItemProvider;

	/**
	 * This creates an adapter for a {@link org.esdihumboldt.eu.wdcs.LiteralPostcondition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiteralPostconditionAdapter() {
		if (literalPostconditionItemProvider == null) {
			literalPostconditionItemProvider = new LiteralPostconditionItemProvider(this);
		}

		return literalPostconditionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.esdihumboldt.eu.wdcs.LiteralPrecondition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiteralPreconditionItemProvider literalPreconditionItemProvider;

	/**
	 * This creates an adapter for a {@link org.esdihumboldt.eu.wdcs.LiteralPrecondition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiteralPreconditionAdapter() {
		if (literalPreconditionItemProvider == null) {
			literalPreconditionItemProvider = new LiteralPreconditionItemProvider(this);
		}

		return literalPreconditionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.esdihumboldt.eu.wdcs.Range} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RangeItemProvider rangeItemProvider;

	/**
	 * This creates an adapter for a {@link org.esdihumboldt.eu.wdcs.Range}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRangeAdapter() {
		if (rangeItemProvider == null) {
			rangeItemProvider = new RangeItemProvider(this);
		}

		return rangeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.esdihumboldt.eu.wdcs.TransformerDescription} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransformerDescriptionItemProvider transformerDescriptionItemProvider;

	/**
	 * This creates an adapter for a {@link org.esdihumboldt.eu.wdcs.TransformerDescription}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTransformerDescriptionAdapter() {
		if (transformerDescriptionItemProvider == null) {
			transformerDescriptionItemProvider = new TransformerDescriptionItemProvider(this);
		}

		return transformerDescriptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.esdihumboldt.eu.wdcs.Workflow} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WorkflowItemProvider workflowItemProvider;

	/**
	 * This creates an adapter for a {@link org.esdihumboldt.eu.wdcs.Workflow}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWorkflowAdapter() {
		if (workflowItemProvider == null) {
			workflowItemProvider = new WorkflowItemProvider(this);
		}

		return workflowItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (cardinalityItemProvider != null) cardinalityItemProvider.dispose();
		if (complexPostconditionItemProvider != null) complexPostconditionItemProvider.dispose();
		if (complexPreconditionItemProvider != null) complexPreconditionItemProvider.dispose();
		if (constraintItemProvider != null) constraintItemProvider.dispose();
		if (dataflowConnectionItemProvider != null) dataflowConnectionItemProvider.dispose();
		if (documentRootItemProvider != null) documentRootItemProvider.dispose();
		if (formatItemProvider != null) formatItemProvider.dispose();
		if (groundingInformationItemProvider != null) groundingInformationItemProvider.dispose();
		if (harmonisationTransformationDescriptionItemProvider != null) harmonisationTransformationDescriptionItemProvider.dispose();
		if (literalPostconditionItemProvider != null) literalPostconditionItemProvider.dispose();
		if (literalPreconditionItemProvider != null) literalPreconditionItemProvider.dispose();
		if (rangeItemProvider != null) rangeItemProvider.dispose();
		if (transformerDescriptionItemProvider != null) transformerDescriptionItemProvider.dispose();
		if (workflowItemProvider != null) workflowItemProvider.dispose();
	}

}
