<?xml version="1.0" encoding="UTF-8"?>
<!-- mdv oct. 2009 meant to validate single gOML mappings (consisting of one or just a few Cells) against the xsd schemas
-->

<align:Alignment xmlns="http://www.omwg.org/TR/d7/ontology/alignment"
	xmlns:omwg="http://www.omwg.org/TR/d7/ontology/alignment"
	xmlns:align="http://knowledgeweb.semanticweb.org/heterogeneity/alignment"
	xmlns:goml="http://www.esdi-humboldt.eu/goml"
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://knowledgeweb.semanticweb.org/heterogeneity/alignment align.xsd">
	
	<align:level>2OMWG</align:level>
	<align:onto1>
		<align:Ontology rdf:about="waterVA">
			<align:location>inputdatasets.xsd</align:location>
			<align:formalism>
				<align:Formalism>
					<align:uri></align:uri>
					<align:name>XSD</align:name>
				</align:Formalism>
			</align:formalism>
		</align:Ontology>
	</align:onto1>
	<align:onto2>
		<align:Ontology rdf:about="inspire">
			<omwg:label>
				xmlns:HY='urn:x-HY:specification:gmlas-v31:Hydrography:2.0'</omwg:label>
			<omwg:label>
				xmlns:GN='urn:x-HY:specification:gmlas-v31:GeographicalNames:2.0'</omwg:label>
			<align:location>hydrography.xsd</align:location>
			<align:formalism>
				<align:Formalism>
					<align:uri></align:uri>
					<align:name>XSD</align:name>
				</align:Formalism>
			</align:formalism>
		</align:Ontology>
	</align:onto2>
	
	
	<!-- rdf:about always uses this pattern to identify an element: NameSpace/FeatureTypeName/AttributeName -->
	
	<!-- Simple Example (Unconditional FeatureClass-Level Mapping) -->
	
	<!-- Note that in this non-transforming case, the <relation> element is used. -->
	<align:map>
		<align:Cell rdf:about="">
			<label>Simple Example</label>
			<entity1>
				<Class
					rdf:about="http://www.esdi-humboldt.org/waterVA/Watercourses_VA">
				</Class>
			</entity1>
			<entity2>
				<Class
					rdf:about="urn:x-inspire:specification:gmlas-v31:Hydrography:2.0/Watercourse">
				</Class>
			</entity2>
			<align:relation>Equivalence</align:relation>
		</align:Cell>
	</align:map>
	
	<!-- Filter Example (Conditional Class-Level) Mapping -->
	<align:map>
		<align:Cell rdf:about="">
			<label>Conditional Class Mapping</label>
			<entity1>
				<Class
					rdf:about="http://www.esdi-humboldt.org/waterVA/Watercourses_VA">
					
					<!-- comment: Class has attributeValueCondition, while Property has valueCondition -->
					<omwg:attributeValueCondition>
						<omwg:Restriction>
							<goml:cqlStr> Watercourses_VA:LEVEL=1 </goml:cqlStr>
						</omwg:Restriction>
					</omwg:attributeValueCondition>
				</Class>
			</entity1>
			<entity2>
				<Class
					rdf:about="urn:x-inspire:specification:gmlas-v31:Hydrography:2.0/Watercourse">
				</Class>
			</entity2>
			<align:relation>Equivalence</align:relation>
		</align:Cell>
	</align:map>
	
	<!-- Transformation Example with Parameters -->
	
	<!-- In case of a transformation, no <relation> element should be used, or it should contain a pointer to the transf element. -->
	<align:map>
		<align:Cell rdf:about="">
			<label>Transformation Example</label>
			<entity1>
				<Property
					rdf:about="http://www.esdi-humboldt.org/waterVA/Watercourses_VA/the_geom">
					
					<!-- comment: rdf:resource rather than align:label holds the function/component name -->
					<omwg:transf
						rdf:resource="java:eu.esdihumboldt.cst.transformer.impl.NetworkExpansionTransformer">
						
						<!--align:label>java:eu.esdihumboldt.cst.transformer.impl.NetworkExpansionTransformer</align:label-->
						<omwg:param>
							<omwg:name>Expansion</omwg:name>
							<omwg:value>50</omwg:value>
						</omwg:param>
					</omwg:transf>
				</Property>
			</entity1>
			<entity2>
				<Property
					rdf:about="urn:x-inspire:specification:gmlas-v31:Hydrography:2.0/Watercourse/geometry">
				</Property>
			</entity2>
		</align:Cell>
	</align:map>
	
	
	<!-- example of a "ValueClass", that can be re-used / referenced from a valueCondition or attributeValueCondition -->
	
	<goml:ValueClass rdf:about="waterVA:LEVEL_cat1">
		<!--comparator>oneOf</comparator-->
		<value>
			<literal>2</literal>
		</value>
		<value>
			<literal>3</literal>
		</value>
		<value>
			<literal>4</literal>
		</value>
		<value>
			<literal>70</literal>
		</value>
		<value>
			<literal>71</literal>
		</value>
		<value>
			<literal>72</literal>
		</value>
		<value>
			<literal>73</literal>
		</value>
		<value>
			<literal>74</literal>
		</value>
	</goml:ValueClass>
	
</align:Alignment>