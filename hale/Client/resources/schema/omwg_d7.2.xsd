<?xml version="1.0" encoding="UTF-8"?>
<!-- 2009 changes
- split schema in 2 schemas: align and omwg
- items of a collection now maxOccurs="unbounded"
- added Path, first, next, Step, Self and PathOrValue / pov 
- TODO type of value element = problem because value can be string or have nested elements
possible solutions (TODO check different syntax in thesis for 'value') 
a. to have rdf:value in case of string, and omwg:value in case of nested elements - but not nice
or b. in case of string have value/literal (and not completely follow OML)
- chosen b. for now, also added value/min and value/max
-->
<xs:schema targetNamespace="http://www.omwg.org/TR/d7/ontology/alignment" 
      xmlns:omwg="http://www.omwg.org/TR/d7/ontology/alignment"
      xmlns:xs="http://www.w3.org/2001/XMLSchema"
      xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
      elementFormDefault="qualified">

   <xs:import namespace="http://www.w3.org/1999/02/22-rdf-syntax-ns#" schemaLocation="tmprdf.xsd" />



   <xs:element type="omwg:EntityType" name="_Entity" abstract="true" />
   <xs:complexType name="EntityType" abstract="true" >
      <xs:sequence>
            <!-- mdv added -->
      	<xs:element ref="omwg:label" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
      <xs:attribute ref="rdf:about" use="optional"/>
   </xs:complexType>

   <xs:element substitutionGroup="omwg:_Entity" type="omwg:AttributeType" name="_Attribute" abstract="true" />
   <xs:complexType name="AttributeType" abstract="true" >
      <xs:complexContent>
         <xs:extension base="omwg:EntityType">
            <!--xs:sequence>
               <xs:element ref="omwg:_condition"/>
            </xs:sequence-->
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>


   <xs:element substitutionGroup="omwg:_Entity" type="omwg:ClassType" name="Class"/>
   <xs:complexType name="ClassType">
      <xs:complexContent>
         <xs:extension base="omwg:EntityType">
            <xs:sequence>
               <xs:group ref="omwg:classConst" minOccurs="0" maxOccurs="1" />
               <xs:group ref="omwg:classCond" minOccurs="0" maxOccurs="unbounded" />
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:group name="classConst">
           <xs:choice>
              <xs:element name="and" type="omwg:ClassAndType" />
              <xs:element name="or" type="omwg:ClassOrType" />
              <xs:element name="not" type="omwg:ClassNotType" />
           </xs:choice>
   </xs:group>

   <xs:group name="classCond">
           <xs:sequence>
               <xs:element ref="omwg:attributeValueCondition" minOccurs="0" maxOccurs="unbounded" />
               <xs:element ref="omwg:attributeTypeCondition" minOccurs="0" maxOccurs="unbounded" />
               <xs:element ref="omwg:attributeOccurenceCondition" minOccurs="0" maxOccurs="unbounded" />
           </xs:sequence>
   </xs:group>


   <xs:element type="omwg:classConditionType" name="attributeValueCondition"/>
   <xs:element type="omwg:classConditionType" name="attributeTypeCondition"/>
   <xs:element type="omwg:classConditionType" name="attributeOccurenceCondition"/>
   <xs:complexType name="classConditionType"  >
      <xs:complexContent>
         <xs:extension base="omwg:conditionType">
            <xs:sequence>
               <xs:element ref="omwg:Restriction"  />
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:element type="omwg:RestrictionType" name="Restriction"/>
   <xs:complexType name="RestrictionType">
      <xs:sequence>
         <!-- in owl doc (and 9.8) onProperty -->
         <!--xs:element ref="omwg:onProperty"/-->
         <xs:element ref="omwg:onAttribute"/>
         <xs:element ref="omwg:comparator"/>
         <!--xs:element name="value" type="xs:string" /-->
         <xs:element name="value" type="omwg:valueExprType" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>

   <!--xs:element type="omwg:valueExprType" name="value"/-->
   <xs:complexType name="valueExprType">
      <xs:choice>
         <xs:element name="literal" type="xs:string" />
         <xs:element name="min" type="xs:string" />
         <xs:element name="max" type="xs:string" />
         <xs:group ref="omwg:pathExpr"/>
         <xs:element ref="omwg:Instance"/>
         <xs:element ref="omwg:Apply"/>
      </xs:choice>
   </xs:complexType>


   <!-- added based on Scharffe thesis 9.2 and examples, because not in 9.8 alignment ontology -->
<!-- but can also be literal child ? -->
   <xs:element type="omwg:onAttributeType" name="onAttribute"/>
   <xs:complexType name="onAttributeType">
      <xs:sequence>
         <!--xs:element ref="omwg:Path"/-->
         <xs:element ref="omwg:_Attribute"/>
      </xs:sequence>
      <xs:attribute ref="rdf:about" use="optional"/>

      <!--xs:choice>
         <xs:element ref="omwg:Path"/>
         <xs:element ref="omwg:Relation"/>
         <xs:element ref="omwg:Property"/>
      </xs:choice-->
   </xs:complexType>

   <xs:element substitutionGroup="omwg:_Attribute" type="omwg:PropertyType" name="Property"/>
   <xs:complexType name="PropertyType">
      <xs:complexContent>
         <xs:extension base="omwg:AttributeType">
           <xs:sequence>
             <xs:group ref="omwg:propConst" minOccurs="0" maxOccurs="1" />
             <xs:group ref="omwg:propCond" minOccurs="0" maxOccurs="unbounded" />
             <xs:group ref="omwg:transformation" minOccurs="0" maxOccurs="1"   />
           </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>



   <xs:group name="propConst">
           <xs:choice>
              <xs:element name="and" type="omwg:PropAndType" />
              <xs:element name="or" type="omwg:PropOrType" />
              <xs:element name="not" type="omwg:PropNotType" />
              <xs:element name="first" type="omwg:PropExprType" />
              <xs:element name="next" type="omwg:RelExprType" />
           </xs:choice>
   </xs:group>

   <xs:group name="propCond">
           <xs:sequence>
             <!-- mdv changed order, domainRestriction first; alternative: 'all' in stead of 'sequence' -->
             <xs:element ref="omwg:domainRestriction" minOccurs="0" maxOccurs="unbounded" />
             <xs:element ref="omwg:valueCondition" minOccurs="0" maxOccurs="unbounded" />
             <xs:element ref="omwg:typeCondition" minOccurs="0" maxOccurs="unbounded" />
           </xs:sequence>
   </xs:group>

   <xs:group name="transformation">
             <!-- based on Scharffe thesis 9.2, extended with transfPipe -->
             <xs:choice >
                <xs:element ref="omwg:transf" minOccurs="0" />
                <xs:element ref="omwg:service" minOccurs="0" />
                <xs:element name="transfPipe" type="omwg:TransfPipeType" minOccurs="0" />
             </xs:choice>
   </xs:group>

   <!-- mdv added, TODO -->
   <xs:complexType name="TransfPipeType">
             <xs:choice minOccurs="0" maxOccurs="1" >
                <xs:element ref="omwg:transf" minOccurs="0" maxOccurs="unbounded"  />
                <xs:element ref="omwg:service" minOccurs="0" maxOccurs="unbounded" />
                <xs:element name="transfPipe" type="omwg:TransfPipeType" minOccurs="0" />
             </xs:choice>
   </xs:complexType>


   <xs:element type="omwg:propertyConditionType" name="_propertyCondition" abstract="true" />
   <xs:complexType name="propertyConditionType" >
   </xs:complexType>


   <xs:element substitutionGroup="omwg:_propertyCondition" type="omwg:valueConditionType" name="valueCondition"/>
   <xs:complexType name="valueConditionType" >
      <xs:complexContent>
         <xs:extension base="omwg:propertyConditionType">
            <xs:sequence>
               <xs:element name="Restriction" type="omwg:propValueRestrictionType" />                  
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <!-- only a type, element Restriction already exists as global element for Class -->
   <xs:complexType name="propValueRestrictionType"  >
      <xs:sequence>
           <xs:element ref="omwg:comparator"/>
           <!--xs:element name="value" type="xs:string" /-->
           <xs:element name="value" type="omwg:valueExprType" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>

   <xs:element type="omwg:domainRestrictionType" name="domainRestriction"/>
   <xs:complexType name="domainRestrictionType">
      <!--xs:complexContent>
         <xs:extension base="omwg:AttributeConditionType"-->
            <xs:sequence>
               <xs:element ref="omwg:Class"/>
            </xs:sequence>
         <!--/xs:extension>
      </xs:complexContent-->
   </xs:complexType>

   <!-- TODO check -->
   <xs:element type="xs:string" name="typeCondition"/>



   <xs:element type="omwg:TransformationType" name="Transformation" abstract="true" />
   <xs:complexType name="TransformationType" abstract="true" >
      <!-- mdv to decide: use transUri, or use rdf:resource, and/or FunctionName and/or WPS ProcessName -->
      <!-- TODO check Scharffe -->
      <xs:sequence>
         <xs:element ref="omwg:transUri" minOccurs="0" />
         <!--xs:element name="arg" type="omwg:kvpType" minOccurs="0" maxOccurs="unbounded"  /-->
         <xs:element name="params" type="xs:string" minOccurs="0" />
      </xs:sequence>
      <xs:attribute ref="rdf:resource" use="optional"/>
   </xs:complexType>

   <!-- mdv added, tmp solution, but not used -->
   <!--xs:complexType name="kvpType"  >
      <xs:sequence>
         <xs:element name="argName" type="xs:string"  />
         <xs:element name="argValue" type="xs:string"  />
      </xs:sequence>
   </xs:complexType-->


   <!-- based on Scharffe thesis 9.2 -->
   <xs:element substitutionGroup="omwg:Transformation" type="omwg:transfType" name="transf"/>
   <xs:complexType name="transfType">
      <xs:complexContent>
         <xs:extension base="omwg:TransformationType">
           <!--xs:sequence>
              <xs:element ref="omwg:value"/>
           </xs:sequence-->
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <!-- based on Scharffe thesis 9.2 -->
   <xs:element substitutionGroup="omwg:Transformation" type="omwg:serviceType" name="service"/>
   <xs:complexType name="serviceType">
      <xs:complexContent>
         <xs:extension base="omwg:TransformationType">
           <!--xs:sequence>
              <xs:element ref="omwg:value"/>
           </xs:sequence-->
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>


   <xs:element substitutionGroup="omwg:_Attribute" type="omwg:RelationType" name="Relation"/>
   <xs:complexType name="RelationType">
      <!-- mdv 2008 inherits from operandType? or from AttributeType? -->
      <xs:complexContent>
        <!--xs:extension base="omwg:operandType"-->
        <xs:extension base="omwg:AttributeType">
          <xs:sequence>
             <xs:group ref="omwg:relConst" minOccurs="0" maxOccurs="1" />
             <xs:group ref="omwg:relCond" minOccurs="0" maxOccurs="unbounded" />
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:group name="relConst">
           <xs:choice>
              <xs:element name="and" type="omwg:ClassAndType"  />
              <xs:element name="or" type="omwg:ClassOrType" />
              <xs:element name="not" type="omwg:RelExprType" />
              <xs:element ref="omwg:inverse"/>
              <xs:element ref="omwg:symmetric"/>
              <xs:element ref="omwg:transitive"/>
              <xs:element ref="omwg:reflexive"/>
              <xs:element name="first" type="omwg:RelExprType" />
              <xs:element name="next" type="omwg:RelExprType" />
           </xs:choice>
   </xs:group>

   <xs:group name="relCond">
           <xs:sequence>
             <xs:element ref="omwg:domainRestriction" />
             <xs:element ref="omwg:rangeRestriction"/>
           </xs:sequence>
   </xs:group>

   <!--xs:element type="omwg:RelationConditionType" name="_relationCondition" abstract="true" /-->
   <!--xs:complexType name="RelationConditionType" abstract="true" >
      <xs:complexContent>
         <xs:extension base="omwg:AttributeConditionType">
            <xs:sequence>
               <xs:element ref="omwg:Class"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType-->

   <xs:element type="omwg:rangeRestrictionType" name="rangeRestriction"/>
   <xs:complexType name="rangeRestrictionType">
      <!--xs:complexContent>
         <xs:extension base="omwg:RelationConditionType"-->
            <xs:sequence>
               <xs:element ref="omwg:Class"/>
            </xs:sequence>
         <!--/xs:extension>
      </xs:complexContent-->
   </xs:complexType>

   <xs:element type="omwg:inverseType" name="inverse"/>
   <xs:complexType name="inverseType">
            <xs:sequence>
               <xs:element ref="omwg:Relation"/>
            </xs:sequence>
   </xs:complexType>

   <xs:element type="omwg:symmetricType" name="symmetric"/>
   <xs:complexType name="symmetricType">
            <xs:sequence>
               <xs:element ref="omwg:Relation"/>
            </xs:sequence>
   </xs:complexType>

   <xs:element type="omwg:transitiveType" name="transitive"/>
   <xs:complexType name="transitiveType">
            <xs:sequence>
               <xs:element ref="omwg:Relation"/>
            </xs:sequence>
   </xs:complexType>


   <xs:element type="omwg:reflexiveType" name="reflexive"/>
   <xs:complexType name="reflexiveType">
            <xs:sequence>
               <xs:element ref="omwg:Relation"/>
            </xs:sequence>
   </xs:complexType>


   <xs:element substitutionGroup="omwg:_Entity" type="omwg:InstanceType" name="Instance"/>
   <xs:complexType name="InstanceType">
      <xs:complexContent>
         <xs:extension base="omwg:EntityType">
            <xs:sequence/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>


<!-- helpers -->



   <xs:element type="omwg:entityPropertyType" name="entity1"/>
   <xs:element type="omwg:entityPropertyType" name="entity2"/>

   <xs:complexType name="entityPropertyType">
      <xs:sequence>
         <xs:element ref="omwg:_Entity"/>
      </xs:sequence>
   </xs:complexType>



<!-- helpers 2 -->

   <xs:complexType name="ClassAndType">
      <!--xs:complexContent>
         <xs:restriction base="omwg:andType"-->
            <xs:sequence>
               <xs:element name="Collection">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="item" type="omwg:ClassItemType" maxOccurs="unbounded" />
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         <!--/xs:restriction>
      </xs:complexContent-->
   </xs:complexType>

   <xs:complexType name="PropAndType">
      <!--xs:complexContent>
         <xs:restriction base="omwg:operatorType"-->
            <xs:sequence>
               <xs:element name="Collection">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="item" type="omwg:PropItemType" maxOccurs="unbounded" />
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         <!--/xs:restriction>
      </xs:complexContent-->
   </xs:complexType>

   <xs:complexType name="ClassOrType">
      <!--xs:complexContent>
         <xs:restriction base="omwg:operatorType"-->
            <xs:sequence>
               <xs:element name="Collection">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="item" type="omwg:ClassItemType" maxOccurs="unbounded" />
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         <!--/xs:restriction>
      </xs:complexContent-->
   </xs:complexType>

   <xs:complexType name="PropOrType">
      <!--xs:complexContent>
         <xs:restriction base="omwg:operatorType"-->
            <xs:sequence>
               <xs:element name="Collection">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="item" type="omwg:PropItemType" maxOccurs="unbounded" />
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         <!--/xs:restriction>
      </xs:complexContent-->
   </xs:complexType>

   <xs:complexType name="ClassNotType">
      <!--xs:complexContent>
         <xs:restriction base="omwg:operatorType"-->
            <xs:sequence>
               <xs:element ref="omwg:Class" />
            </xs:sequence>
         <!--/xs:restriction>
      </xs:complexContent-->
   </xs:complexType>

   <xs:complexType name="PropNotType">
      <!--xs:complexContent>
         <xs:restriction base="omwg:operatorType"-->
            <xs:sequence>
               <xs:element ref="omwg:Property" />
            </xs:sequence>
         <!--/xs:restriction>
      </xs:complexContent-->
   </xs:complexType>

   <xs:complexType name="PropExprType">
      <!--xs:complexContent>
         <xs:restriction base="omwg:operatorType"-->
            <xs:sequence>
               <xs:element ref="omwg:Property" />
            </xs:sequence>
         <!--/xs:restriction>
      </xs:complexContent-->
   </xs:complexType>

   <xs:complexType name="RelExprType">
      <!--xs:complexContent>
         <xs:restriction base="omwg:operatorType"-->
            <xs:sequence>
               <xs:element ref="omwg:Relation" />
            </xs:sequence>
         <!--/xs:restriction>
      </xs:complexContent-->
   </xs:complexType>

   <xs:element type="omwg:ItemType" name="_item" abstract="true" />
   <xs:complexType name="ItemType" abstract="true">
      <xs:sequence>
         <!-- Scharffe thesis 9.2: this can be Class or Property; in thesis examples also Relation -->
         <xs:element ref="omwg:_Entity"/>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="ClassItemType" >
      <xs:complexContent>
         <xs:restriction base="omwg:ItemType">
            <xs:sequence>
               <xs:element ref="omwg:Class"/>
            </xs:sequence>
         </xs:restriction>
      </xs:complexContent>
   </xs:complexType>

   <xs:complexType name="PropItemType" >
      <xs:complexContent>
         <xs:restriction base="omwg:ItemType">
            <xs:sequence>
               <xs:element ref="omwg:Property"/>
            </xs:sequence>
         </xs:restriction>
      </xs:complexContent>
   </xs:complexType>



   <xs:element type="omwg:conditionType" name="_condition" abstract="true" />
   <xs:complexType name="conditionType" abstract="true" >
      <!--xs:sequence>
         <xs:element ref="omwg:Restriction"/>
      </xs:sequence-->
   </xs:complexType>


   <!--xs:element type="omwg:AttributeConditionType" name="_attributeCondition" abstract="true" /-->
   <xs:complexType name="AttributeConditionType" abstract="true" >
      <!--xs:complexContent>
         <xs:extension base="omwg:conditionType">
            <xs:sequence>
               <xs:element ref="omwg:Class"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent-->
   </xs:complexType>


   <xs:element type="omwg:comparatorEnumType" name="comparator"/>
   <xs:simpleType name="comparatorEnumType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="equal"/>
         <xs:enumeration value="not-equal"/>
         <xs:enumeration value="less-than"/>
         <xs:enumeration value="less-than-or-equal"/>
         <xs:enumeration value="greater-than"/>
         <xs:enumeration value="greater-than-or-equal"/>
         <xs:enumeration value="contains"/>
         <xs:enumeration value="starts-with"/>
         <xs:enumeration value="ends-with"/>
         <xs:enumeration value="matches"/>
         <xs:enumeration value="collection-contains"/>
         <xs:enumeration value="includes"/>
         <xs:enumeration value="includes-strictly"/>
         <xs:enumeration value="empty"/>
         <!-- mdv added -->
         <xs:enumeration value="oneOf"/>
         <xs:enumeration value="between"/>

      </xs:restriction>
   </xs:simpleType>


<!-- element definitions with no complexType -->

   <xs:element type="xs:string" name="transUri"/>
   
   <!-- changed in complex type see below -->
   <!--xs:element type="xs:string" name="value"/-->

   <!-- added based on Scharffe thesis 9.2 -->
   <xs:element type="xs:string" name="label"/>


   <!-- not used in 9.2 -->
   <!--xs:element type="xs:string" name="method"/>
   <xs:element type="xs:string" name="purpose"/>
   <xs:element type="xs:string" name="stringValue"/>
   <xs:element type="xs:string" name="type"/>
   <xs:element type="xs:string" name="typeRestriction"/-->


<!-- 2009 'new', back in from owl definitions -->

   <xs:group name="pathExpr">
           <xs:choice>
              <xs:group ref="omwg:Step" />
              <xs:element ref="omwg:Self"  />
              <xs:element ref="omwg:Path" />
           </xs:choice>
   </xs:group>

   <xs:element type="xs:anyURI" name="Self"/>

   <xs:group name="Step">
      <xs:choice>
         <xs:element ref="omwg:Property"/>
         <xs:element ref="omwg:Relation"/>
      </xs:choice>
   </xs:group>

   <xs:element type="omwg:PathType" name="Path"/>
   <xs:complexType name="PathType">
      <xs:sequence>
         <xs:element ref="omwg:first"/>
         <xs:element ref="omwg:next"/>
      </xs:sequence>
   </xs:complexType>

   <xs:element type="omwg:firstType" name="first"/>
   <xs:complexType name="firstType">
      <!-- mdv 2009 not in owl class definitions, but based on html-page -->
      <xs:sequence>
         <xs:group ref="omwg:Step"/>
      </xs:sequence>
   </xs:complexType>

   <xs:element type="omwg:nextType" name="next"/>
   <xs:complexType name="nextType">
      <xs:sequence>
         <xs:element ref="omwg:Path"/>
      </xs:sequence>
   </xs:complexType>


   <xs:group name="pov">
      <!-- this content not specified in the OWL class file -->
      <xs:choice>
         <xs:group ref="omwg:pathExpr"/>
         <!--xs:element name="value" type="xs:string" /-->
         <xs:element name="value" type="omwg:valueExprType" />
      </xs:choice>
   </xs:group>




   <xs:element type="omwg:ApplyType" name="Apply"/>
   <xs:complexType name="ApplyType">
      <!--xs:sequence>
         <xs:group ref="omwg:pov" maxOccurs="unbounded" />
      </xs:sequence-->
      <xs:choice>
         <xs:group ref="omwg:pathExpr"/>
         <!--xs:element name="value" type="xs:string" /-->
         <xs:element name="value" type="omwg:valueExprType" />
      </xs:choice>

      <xs:attribute name="operation" type="xs:anyURI"/>
   </xs:complexType>


</xs:schema>