<?xml version="1.0" encoding="UTF-8"?>
<schema targetNamespace="http://www.opengis.net/gml" elementFormDefault="qualified" version="3.1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:gml="http://www.opengis.net/gml" xmlns:sch="http://www.ascc.net/xml/schematron" xmlns="http://www.w3.org/2001/XMLSchema">

   <!--import namespace="http://www.w3.org/1999/xlink" schemaLocation="xlinks.xsd"/-->

   <element name="_Object" abstract="true">
      <annotation>
         <documentation>
            This abstract element is the head of a substitutionGroup
            hierararchy which may contain either simpleContent or
            complexContent elements.  It is used to assert the model
            position of "class" elements declared in other GML schemas.
         </documentation>
      </annotation>
   </element>
   <!-- ============================================================ -->
   <!-- == Abstract "GMLobject" supertype ========================== -->
   <element name="_GML" type="gml:AbstractGMLType" abstract="true"
      substitutionGroup="gml:_Object">
      <annotation>
         <documentation>
            Global element which acts as the head of a substitution group
            that may include any element which is a GML feature, object,
            geometry or complex value
         </documentation>
      </annotation>
   </element>

   <!-- =========================================================== -->
   <complexType name="AbstractGMLType" abstract="true">
      <annotation>
         <documentation>
            All complexContent GML elements are directly or indirectly
            derived from this abstract supertype to establish a hierarchy
            of GML types that may be distinguished from other XML types
            by their ancestry.  Elements in this hierarchy must have an
            ID and are thus referenceable.
         </documentation>
      </annotation>
      <sequence>
         <!--group ref="gml:StandardObjectProperties"/-->
      </sequence>
      <attribute ref="gml:id" use="optional"/>
   </complexType>

   <attribute name="id" type="ID">
      <annotation>
         <documentation>
            Database handle for the object.  It is of XML type ID,
            so is constrained to be unique in the XML document within
            which it occurs.  An external identifier for the object
            in the form of a URI may be constructed using standard XML
            and XPointer methods.  This is done by concatenating the
            URI for the document, a fragment separator, and the value
            of the id attribute.
         </documentation>
      </annotation>
   </attribute>

   <!--group name="StandardObjectProperties">
      <annotation>
         <documentation>
            This content model group makes it easier to construct types
            that derive from AbstractGMLType and its descendents "by
            restriction".  A reference to the group saves having to
            enumerate the standard object properties.
         </documentation>
      </annotation>
      <sequence>
         <element ref="gml:description" minOccurs="0"/>
         <element ref="gml:name" minOccurs="0" maxOccurs="unbounded">
            <annotation>
               <documentation>
                  Multiple names may be provided.  These will often be
                  distinguished by being assigned by different authorities,
                  as indicated by the value of the codeSpace attribute.
                  In an instance document there will usually only be one
                  name per authority.
               </documentation>
            </annotation>
         </element>
      </sequence>
   </group-->



   <!--attributeGroup name="AssociationAttributeGroup">
      <annotation>
         <documentation>
            Attribute group used to enable property elements to refer
            to their value remotely. It contains the simple link
            components from xlinks.xsd, with all members optional.
            These attributes can be attached to any element, thus
            allowing it to act as a pointer.
         </documentation>
      </annotation>
      <attributeGroup ref="xlink:simpleLink"/>
   </attributeGroup-->


</schema>




