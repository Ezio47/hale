<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<link rel="stylesheet" type="text/css" href="new.css" />
<title>What's new in HALE 2.9?</title>
</head>
<body>
	<h1>What's new in HALE 2.9?</h1>
	<p>HALE 2.9 comes with some nice new features since the last
		release HALE 2.8.0 - among other things a free configurable command
		line interface for transformation, improved INSPIRE support and some
		bug fixes.</p>

	<p class="Note">Please note that projects created with HALE 2.9 in
		some cases may be incompatible with previous versions of HALE. This is
		because the project file format has been extended, but the project
		file parser in HALE 2.8 and earlier is very strict and fails if it
		encounters anything unknown.</p>

	<!-- 2.9.4 -->
	<h2 id="2_9_4_Header">2.9.4</h2>
	<p>HALE 2.9.4 is a maintenance release with a few tweaks and bug
		fixes, but also two noticeable experimental features that were added.</p>
	<table border="0" cellpadding="15" cellspacing="0" class="news"
		id="2_9_4">
		<tbody>
			
			<!-- New features -->
			<tr>
				<td class="section" colspan="2" id="2_9_4_Features" rowspan="1"><h2>New features</h2></td>
			</tr>

			<tr id="geoserver">
				<td class="title">GeoServer App-Schema configuration</td>
				<td class="content">Publishing OGC services based on GML
					Application Schemas and Complex Features with GeoServer is now
					easier than ever. You can use HALE to define and manage the mapping
					from your data store to an application schema and upload the
					resulting configuration for the GeoServer App-Schema plugin
					directly to your GeoServer instance.
					<p>
						<img src="2_9_0_images/geoserver-appschema.png" />
					</p>
					<p>
						This is the first release of this integration of HALE and
						GeoServer and though functional, should still be considered
						experimental. Please see the <a
							href="PLUGINS_ROOT/eu.esdihumboldt.hale.doc.appschema/html/introduction/intro.html">GeoServer
							App-Schema Plug-in for HALE help</a> for more information on usage
						and limitations.
					</p>
					<p>Thanks to GeoSolutions and Stefano Costa for this
						contribution to HALE.</p>
				</td>
			</tr>

			<tr id="inline-cst">
				<td class="title">Inline transformation</td>
				<td class="content">When you encounter complex embedded
					structures in your data (like for instance embedded Features), even
					with the powerful declarative approach of HALE, the mapping can get
					quite complicated. Especially when the same structures in the
					source often have the same structure in the target to be
					transformed to, there should be a possibility for reuse. With the
					Inline transformation function you have the possibility to make use
					of a type transformation defined in the mapping for any
					transformation of properties that have the corresponding source and
					target type.
					<p>
						As an example, let's assume we are looking at a mapping between
						different CityGML schemas or ADEs. In both source and target there
						is the concept of a <i>Building</i> and a <i>BuildingPart</i>. <i>BuildingParts</i>
						can be features on their own, thus a mapping is defined based on a
						<i>Retype</i> between the corresponding source and target types.<br />
						<i>Buildings</i> however can also contain <i>BuildingParts</i>,
						and to transform these internal <i>BuildingParts</i> we can use
						the <i>Inline transformation</i> to tell HALE that it should
						transform the internal objects the same way as it would standalone
						features, with the additional step to include it in the respective
						target property.
					</p>
					<p>
						<img src="2_9_0_images/inline.png" />
					</p>
				</td>
			</tr>

			<!-- Tweaks and bug fixes -->
			<tr>
				<td class="section" colspan="2" id="2_9_4_TWX" rowspan="1"><h2>Tweaks &amp; bug fixes</h2></td>
			</tr>
			
			<tr id="cli_folders">
				<td class="title">CLI: Transform folders</td>
				<td class="content">The <a
					href="PLUGINS_ROOT/eu.esdihumboldt.hale.doc.user/html/tasks/transform_cli.html">command
						line interface</a> has been extended with the capability to use whole
					folders as source for the transformation. Files to include or
					exclude can be specified with corresponding patterns. This can be
					very handy if you have a set of files to transform, for example if
					your data set is tiled or files are generated and the file names
					are unknown beforehand.
					<p>
						Thanks to <i>Landesbetrieb Geoinformation und Vermessung
							Hamburg</i> for funding this work under a <a target="_blank"
							href="https://www.wetransform.to/services/support/">Professional
							Support Subscription for HALE</a>.
					</p>
				</td>
			</tr>

			<tr id="lenient_xml_reader">
				<td class="title">Namespace agnostic loading of XML/GML</td>
				<td class="content">HALE relies on schemas for transformation
					and handling data. If you have data that is very similarly
					structured but has a different schema, the difference often is a
					difference in namespaces. This can be the case for instance when
					using data based on a previous version of a schema or for data that
					is published via an OGC Web Feature Service. Now there is an option
					when loading XML or GML data, that instances will be loaded even if
					the namespaces do not match the schema's exactly.
					<p>
						Thanks to <i>HL Consulting BVBA</i> for funding this work under a
						<a target="_blank" href="https://www.wetransform.to/services/support/">Professional
							Support Subscription for HALE</a>. They use this feature to define
						their alignments on a schema that allows them to make extensive
						use of relation inheritance in their alignment, to have one
						mapping that they can use to transform data from different
						services.
					</p>
				</td>
			</tr>

			<tr id="tweaks_2_9_4">
				<td class="title">Minor tweaks</td>
				<td class="content">
					<ul>
						<li>Added an option for loading an XML Schema that allows to use all globally defined types for the alignment.</li>
						<li>Deprecated INSPIRE SpatialDataSet export, as INSPIRE now recommends to use a WFS 2.0 FeatureCollection instead.</li>
						<li>Support generating a Dataset Feed file for an ATOM-based INSPIRE predefined Dataset Download Service when exporting to a WFS 2.0 FeatureCollection.</li>
						<li>Groovy type transformations can throw a <i>NoResultException</i> to prevent the creation of a target instance.</li>
						<li>Added a Groovy variant of the <i>Join</i> transformation that allows for more control on the creation of transformed instances.</li>
						<li>Introduced the concept of helper functions available from Groovy scripts. Currently included are helpers for dealing with geometries and performing type conversions.</li>
						<li>Structural copies with <i>Rename</i> and <i>Retype</i> can now explicitly exclude geometry objects parsed by HALE, for cases where the original geometry encoding should be retained.</li>
						<li>A default SRS can now be specified on the command line, for reading data from a specific source, in case HALE cannot correctly detect the SRS.</li>
						<li>Handling foreign key constraints during the export to a database has been improved.</li>
					</ul>
				</td>
			</tr>
			
			<tr id="fixes_2_9_4">
				<td class="title">Bug fixes</td>
				<td class="content">
					<ul>
						<li>Fixed erroneous flipping of coordinates when displaying geometries in the map view (Thanks to Willem Stolte for the bug report).</li>
						<li>Fixed the File Dialog on Mac OS X being rendered unusable after first use (Thanks to Olav Peeters for the bug report).</li>
						<li>Fixed handling of nillable complex XML elements containing only a nilReason (Thanks  to Ann Crabbe for the bug report).</li>
						<li>Fixed proxy configuration not being applied when loading code lists, accessing the INSPIRE registry or loading web templates.</li>
						<li>Fixed <i>Merge</i> type transformation configuration for property names containing dots (Thanks to Willem Stolte for the bug report).</li>
						<li>Fixed encoding of simple type lists in XML.</li>
						<li>Fixed handling of target URI without path in the Command Line Interface.</li>
						<li>Fixed handling of absolute file locations in the Command Line Interface on Windows.</li>
						<li>Fixed live validation based on XML Schema which sometimes treated <i>null</i> values wrong.</li>
						<li>Fixed UI problems when using type conditions and custom map styles.</li>
						<li>Fixed the inconsistent behavior on which instances can be retrieved from the internal temporary database in comparison to a file or other source.</li>
					</ul>
				</td>
			</tr>
			
		</tbody>
	</table>

	<!-- 2.9.3 -->
	<h2 id="2_9_3_Header">2.9.3</h2>
	<p>HALE 2.9.3 is a maintenance release with a few tweaks and bug
		fixes, but also two noticeable features that were added.</p>
	<table border="0" cellpadding="15" cellspacing="0" class="news"
		id="2_9_3">
		<tbody>
			
			<!-- New features -->
			<tr>
				<td class="section" colspan="2" id="2_9_3_Features" rowspan="1"><h2>New features</h2></td>
			</tr>

			<tr id="spatialite">
				<td class="title">Support for SQLite and SpatiaLite</td>
				<td class="content">You can now work with SQLite and SpatiaLite
					files using HALE. This was made possible by a <a
					href="http://www.geo-solutions.it/blog/inspire-support-in-geoserver-made-easy-with-hale/"
					target="_blank">contribution from GeoSolutions</a>. Special thanks
					to Stefano Costa and Sandro	Salari!
					<p>
						Please see the corresponding help topics for more information on
						SQLite/SpatiaLite <a
							href="PLUGINS_ROOT/eu.esdihumboldt.hale.doc.user/html/reference/import/sqlite.html">import</a>
						and <a
							href="PLUGINS_ROOT/eu.esdihumboldt.hale.doc.user/html/reference/export/sqlite.html">export</a>.
					</p>
				</td>
			</tr>

			<tr id="colorstyles">
				<td class="title">Colored styles generator</td>
				<td class="content">Create individual styles for your feature
					types with just one click. Using specific styles provides a better
					overview in the map. To easily identify associated types, the type
					symbol reflects the style.
					<p>As an additional option you can quickly assign a random
						color to a selected type. For more control specify a custom style
						with the style editor.</p>
					<p>
						<img src="2_9_0_images/styles-colors.png" />
					</p>
				</td>
			</tr>

			<!-- Tweaks and bug fixes -->
			<tr>
				<td class="section" colspan="2" id="2_9_3_TWX" rowspan="1"><h2>Tweaks &amp; bug fixes</h2></td>
			</tr>
			
			<tr id="inspire4">
				<td class="title">INSPIRE 4.0 schema presets</td>
				<td class="content">Experienced HALE users know they can load
					any GML/XML Schema using the corresponding XSD file. However, it's
					more convenient to just search and select a schema from the presets
					defined in HALE. INSPIRE version 4.0 schemas now included.</td>
			</tr>
			
			<tr id="inspire_nil">
				<td class="title">Improved UX for INSPIRE <i>voidable</i> attributes</td>
				<td class="content">When assigning a <i>nilReason</i> for a <i>voidable</i>
					attribute, so far you were offered the values that are proposed by
					GML, not those defined in INSPIRE. To make it more convenient for
					you, you can now select from the INSPIRE values <i>unpopulated</i>, <i>unknown</i>
					and <i>withheld</i>, even though those are not defined in the
					schema itself. Thanks to Helen Eriksson for this idea on making it
					easier for users to map to INSPIRE schemas.
				</td>
			</tr>
			
			<tr id="tweaks_2_9_3">
				<td class="title">Minor tweaks</td>
				<td class="content">
					<ul>
						<li><i>Schema Explorer</i>: added filter to hide unpopulated types (e.g. for large schemas).</li>
						<li>Improved GML export: <i>srsDimension</i> is provided and you can select a preferred prefix for representing EPSG codes.</li>
						<li>You can now specify a character encoding to use when loading a schema from a Shapefile.</li>
						<li>Excluding types from the mapping via the <i>Schema Explorer</i> now works also with a selection of multiple types.</li>
					</ul>
				</td>
			</tr>
			
			<tr id="fixes_2_9_3">
				<td class="title">Bug fixes</td>
				<td class="content">
					<ul>
						<li>Fixed wrong detection of GML namespace that could happen if certain GML 3.3 schemas were imported in a schema (Thanks to Fabio Vinci for the bug report).</li>
						<li>Fixed error on XML export that could lead to an invalid file (Thanks to Giuseppe Procino for the bug report).</li>
						<li>Fixed parsing GML geometries defined through a <i>Ring</i> instead of a <i>LinearRing</i>.</li>
						<li>Show 3D WKT (instead of 2D WKT) for 3D geometries in the data views.</li>
						<li>Fixed error that could lead to a <i>Merge</i> relation no longer being editable after a schema upgrade.</li>
						<li>Variable values for Groovy scripts are no longer converted and passed as a String by default.</li>
						<li>Fixed deadlock that could occur when disabling the Groovy restriction when a project is loaded.</li>
						<li>Fixed behavior that could lead to a drastic performance loss for <i>Merge</i> and <i>Join</i> operations on very complex instances.</li>
						<li>Fixed saving a project as a project archive if resources include a query string (e.g. WFS requests).</li>
					</ul>
				</td>
			</tr>
			
		</tbody>
	</table>

	<!-- 2.9.1 -->
	<h2 id="2_9_1_Header">2.9.1</h2>
	<p>HALE 2.9.1 is a maintenance release with a few tweaks and bug
		fixes, but also some experimental features that were added.</p>
	<table border="0" cellpadding="15" cellspacing="0" class="news"
		id="2_9_1">
		<tbody>
			
			<!-- Experimental features -->
			<tr>
				<td class="section" colspan="2" id="2_9_1_EXP" rowspan="1"><h2>Experimental features</h2></td>
			</tr>

			<tr id="wfs_publish">
				<td class="title">Publish to WFS</td>
				<td class="content">Publish GML to a transactional Web Feature
					Service, for instance for publishing INSPIRE data to a <a
					href="http://www.deegree.org/" target="_blank">deegree</a> server.
					<p>
						Please see the <i><a
							href="PLUGINS_ROOT/eu.esdihumboldt.hale.doc.user/html/reference/export/wfs.html">Transactional
								WFS</a></i> help topic for information on usage and limitations.
					</p>
				</td>
			</tr>

			<tr id="db_export">
				<td class="title">Database export</td>
				<td class="content">Experimental support for writing to
					databases via JDBC.
					<p>
						Please see the <i><a
							href="PLUGINS_ROOT/eu.esdihumboldt.hale.doc.user/html/reference/export/jdbc.html">Database
								export</a></i> help topic for information on usage and limitations.
					</p>
				</td>
			</tr>

			<tr id="schema_update">
				<td class="title">Schema update</td>
				<td class="content">A new option in the menu allows to replace
					the schema for an existing project (e.g. updating from a schema to
					a new version). The migration dialog allows to update the mapping
					accordingly. We are still working on an improved UI and currently
					only updating the target schema is possible.</td>
			</tr>
			
			<!-- Tweaks and bug fixes -->
			<tr>
				<td class="section" colspan="2" id="2_9_1_TWX" rowspan="1"><h2>Tweaks &amp; bug fixes</h2></td>
			</tr>
			
			<tr id="wfs_reloaded">
				<td class="title">Better support for accessing data provided via WFS</td>
				<td class="content">The user interface to construct WFS <i>DescribeFeatureType</i>
					and <i>GetFeature</i> URLs for loading schemas and data has been
					improved. It now supports WFS 2.0 and providing a Bounding Box for
					loading data.
				</td>
			</tr>
			
			<tr id="tweaks_2_9_1">
				<td class="title">Minor tweaks</td>
				<td class="content">
					<ul>
						<li>Pretty printing of XML/GML disabled by default - configurable for the export</li>
						<li>Code lists loaded from the INSPIRE registry now display values in the system language if possible</li>
						<li>Support for export of GML files using WFS FeatureCollection as container</li>
						<li>Added <i>Aggregate</i> function for smart aggregation of geometries</li>
						<li>Prefer MultiSurface over CompositeSurface when encoding MultiPolygons as GML</li>
					</ul>
				</td>
			</tr>
			
			<tr id="fixes_2_9_1">
				<td class="title">Bug fixes</td>
				<td class="content">
					<ul>
						<li>Fixed GML encoding of curve geometries - invalid curve geometries will give an error during export</li>
						<li>Fixed UI for <i>Classification</i> and <i>Bound Assign functions</i></li>
						<li>Added general timeouts for HTTP requests, timeouts are now configurable via system properties</li>
					</ul>
				</td>
			</tr>
			
		</tbody>
	</table>

	<!-- 2.9.0 -->
	<h2 id="2_9_0_Header">2.9.0</h2>
	<table border="0" cellpadding="15" cellspacing="0" class="news"
		id="2_9_0">
		<tbody>

			<tr id="transform_cli">
				<td class="title" colspan="1" rowspan="1">Extended command line
					interface</td>
				<td class="content" colspan="1" rowspan="1">For integrating
					schema transformation based on HALE into your infrastructure an
					easy way is to use the command line interface. Some have already
					used the command line interface part of the integration with the
					HALE FME plug-in - but this is very limited in functionality. The
					new command line interface is far more flexible in its
					configuration and allows data export to be easily configured with
					support through the HALE user interface. HALE plug-ins and
					extensions offering additional data format or validation support
					can be used with minimal effort.
					<p>
						<img src="2_9_0_images/cli.png" />
					</p>
					<p>
						For detailed information on the command line interface, please see
						the <i><a
							href="PLUGINS_ROOT/eu.esdihumboldt.hale.doc.user/html/tasks/transform_cli.html">Transformation
								via the command line</a></i> help topic.
					</p>
				</td>
			</tr>

			<tr id="dataset_feed">
				<td class="title" colspan="1" rowspan="1">Dataset feed for
					INSPIRE Download Service</td>
				<td class="content" colspan="1" rowspan="1">HALE aids you in
					creating an ATOM feed based INSPIRE download service by generating
					a dataset feed for your transformed data automatically. Just enable
					the creation of the feed in the <a
					href="PLUGINS_ROOT/eu.esdihumboldt.hale.doc.user/html/reference/export/inspiregml_data.html">INSPIRE
						SpatialDataSet export</a> and provide some basic information for the
					feed metadata. Information on feature types and coordinate
					reference systems will be included automatically.
					<p>
						<img src="2_9_0_images/feed3.png" />
					</p>
					<p>
						For a complete ATOM based INSPIRE Download Service you will need
						to include the dataset feed in a download feed. Take a look <i><a
							href="PLUGINS_ROOT/eu.esdihumboldt.hale.doc.user/html/reference/export/inspiregml_data.html">here</a></i>
						for more information and a template.
					</p>
				</td>
			</tr>

			<tr id="crs_conversion">
				<td class="title" colspan="1" rowspan="1">CRS conversion</td>
				<td class="content" colspan="1" rowspan="1">You can now include
					a conversion to a given coordinate reference system (CRS) as part
					of writing the transformed data to GML. You can identify the CRS
					with an EPSG code or define a custom CRS using a WKT
					representation.
					<p>
						<img src="2_9_0_images/crs_conv.png" />
					</p>
				</td>
			</tr>

			<tr id="structural_retype">
				<td class="title" colspan="1" rowspan="1">Easily copy similar
					attributes</td>
				<td class="content" colspan="1" rowspan="1">Do you have source
					and target schema types that are very similar and differ just in a
					few properties or only the namespace? Now the <b>Retype</b>
					transformation function has configuration options to automatically
					copy properties/attributes with similar names. To do this only on
					the level of a certain property, use the <b>Rename</b> function and
					configure it as <i>structural rename</i>.
				</td>
			</tr>

			<tr id="excel">
				<td class="title" colspan="1" rowspan="1">Excel file support</td>
				<td class="content" colspan="1" rowspan="1">Similar to the
					support for CSV files you can now read or write simple Excel files
					(.xls, .xlsx) with HALE. For more information, see <a
					href="PLUGINS_ROOT/eu.esdihumboldt.hale.doc.user/html/reference/import/xls.html">Excel
						File Import</a> and <a
					href="PLUGINS_ROOT/eu.esdihumboldt.hale.doc.user/html/reference/export/xls_data.html">Excel
						File Export</a>.
					<p>Are Excel files potential source data you need to transform?
						Let us know your requirements for an extended Excel support.</p>
				</td>
			</tr>

			<tr id="migrate">
				<td class="title" colspan="1" rowspan="1">Cope with schema
					changes</td>
				<td class="content" colspan="1" rowspan="1">Easily adapt a
					mapping created for a different version of a schema. When HALE
					encounters a mapping of a schema element that no longer exists
					(e.g. because it has been renamed or deleted), it will ask you to
					select an element from the current schema instead. You also have
					the option to cancel and keep the now invalid relation instead.
					<p>
						<img src="2_9_0_images/migrate.png" />
					</p>
				</td>
			</tr>

			<tr id="inspire_registry_cl">
				<td class="title" colspan="1" rowspan="1">Load code lists from
					INSPIRE registry</td>
				<td class="content" colspan="1" rowspan="1">Browse and search
					the code lists from the <a
					href="http://inspire.ec.europa.eu/registry/" target="_blank">INSPIRE
						registry</a> provided by the JRC and directly load them in HALE.
					<p>
						<img src="2_9_0_images/registry_codelists.png" />
					</p>
				</td>
			</tr>

			<tr id="inspire_annex23">
				<td class="title" colspan="1" rowspan="1">INSPIRE Annex II
					&amp; III schemas</td>
				<td class="content" colspan="1" rowspan="1">The INSPIRE Annex
					II and III themes application schemas are now included in HALE, for
					faster loading and offline usage. Also check out the INSPIRE
					project templates (<i>File</i>&#8594;<i>New project from
						template</i>) to get you started faster on your transformation towards
					INSPIRE.
				</td>
			</tr>

			<tr id="export_source">
				<td class="title" colspan="1" rowspan="1">Export source data</td>
				<td class="content" colspan="1" rowspan="1">The same options
					you have for export of transformed data are now available for
					source data as well. This means you can easily export data in the
					same structure but in a different encoding, for instance XML as
					JSON.</td>
			</tr>

			<tr id="data_copyval">
				<td class="title" colspan="1" rowspan="1">Copy property values
					to clipboard</td>
				<td class="content" colspan="1" rowspan="1">
					<p>The data views now allow to easily copy values from
						inspected instances to the clipboard for further use or detailed
						inspection.</p>
					<div>
						<img src="2_9_0_images/data_copyval.png" />
					</div>
				</td>
			</tr>

			<tr id="metadata_filter">
				<td class="title" colspan="1" rowspan="1">Easily find source or
					target</td>
				<td class="content" colspan="1" rowspan="1">In addition to the
					possibility to filter based on CQL, you can search for specific
					instances in the data views by their internal HALE identifiers.
					These identifiers are displayed in the data views for each instance
					in the metadata category.
					<p>
						This allows you to easily find a source instance for a transformed
						instance, or a transformed instance for a source instance. To find
						the source instance for a transformed instance, copy the
						identifier displayed as <i>Source ID</i> for the transformed
						instance, and specify a filter with the identifier preceded by
						<code>id:</code>
						in the source data view. The respective prefix for finding
						transformed instances for a source instance in the transformed
						data view is
						<code>source:</code>
					</p>
					<p>
						<img src="2_9_0_images/metadata_filter.png" />
					</p>
				</td>
			</tr>

			<tr id="alignment_doc_svg">
				<td class="title" colspan="1" rowspan="1">New mapping
					documentation format</td>
				<td class="content" colspan="1" rowspan="1">Additionally to the
					existing mapping documentation HTML format that is more suited for
					printing, we added a new mapping documentation format based on HTML
					and SVG that is better suited to be displayed in a web browser.
					<p>
						<img src="2_9_0_images/alignment_doc.png" />
					</p>
				</td>
			</tr>

			<tr id="cache_schemas">
				<td class="title" colspan="1" rowspan="1">Map database schemas
					without database access</td>
				<td class="content" colspan="1" rowspan="1">HALE now caches
					certain types of schemas as part of the project, in case the
					resource to load the schema from is not accessible. This allows you
					to share projects that use your database schema without the need
					for them to be able to connect to the database.</td>
			</tr>

			<tr id="safer_groovy">
				<td class="title" colspan="1" rowspan="1">Safer execution of
					Groovy scripts</td>
				<td class="content" colspan="1" rowspan="1">With the Groovy
					transformation functions you practically can do anything - but that
					doesn't only have good sides. HALE by default restricts the
					execution of Groovy code as part of the transformation to allow
					access only to certain classes and methods. If you trust a
					project's Groovy code, you can disable the restriction, which also
					allows a more performant execution.
					<p>
						<img src="2_9_0_images/sandbox1.png" />
					</p>
				</td>
			</tr>

			<tr id="assign_split">
				<td class="title" colspan="1" rowspan="1"><i>Assign</i> - back
					to the roots</td>
				<td class="content" colspan="1" rowspan="1">In one of the
					previous releases the <i>Assign</i> transformation function has
					been extended with the possibility to only apply it if a certain
					source property value is present. This change in the function has led to
					some confusion and accidental misconfiguration of relations. The <i>Assign</i>
					function now again is a pure augmentation, that has no connection
					to the source schema. Instead there now is an additional function <i>Assign
						(Bound)</i> that requires a source schema element as anchor. This
					doesn't break any existing mappings, existing assigns will be
					replaced on load with the bound assign if applicable.
				</td>
			</tr>

			<tr id="other">
				<td class="title" colspan="1" rowspan="1">Other stuff</td>
				<td class="content" colspan="1" rowspan="1">There is a lot more
					that has changed under the hood for the 2.9 release. Apart from a
					lot of bug fixes and an upgrade of the underlying platform from
					Eclipse Indigo to Eclipse Luna, there also was a new build system
					introduced that allows us to again provide an installer for Windows
					and a version of HALE that runs on current Mac OS X operating
					systems.</td>
			</tr>

		</tbody>
	</table>

</body>
</html>